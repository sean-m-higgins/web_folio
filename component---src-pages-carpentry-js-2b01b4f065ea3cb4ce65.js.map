{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./src/components/subtitle.js","webpack:///./src/components/title.js","webpack:///./node_modules/@apollo/react-components/lib/react-components.esm.js","webpack:///./src/components/launchItem.js","webpack:///./src/components/launches.js","webpack:///./src/components/launch.js","webpack:///./src/pages/carpentry.js","webpack:///./node_modules/@apollo/react-hooks/lib/react-hooks.esm.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","Subtitle","render","className","this","props","subtitleText","Component","Title","titleText","children","query","options","result","_a","mutation","runMutation","subscription","propTypes","client","object","func","isRequired","fetchPolicy","string","notifyOnNetworkStatusChange","bool","onCompleted","onError","pollInterval","number","variables","ssr","partialRefetch","returnPartialData","optimisticResponse","oneOfType","refetchQueries","arrayOf","awaitRefetchQueries","update","onSubscriptionData","onSubscriptionComplete","shouldResubscribe","LaunchItem","launch","mission_name","flight_number","launch_date_local","launch_success","LAUNCHES_QUERY","gql","Launches","loading","error","data","console","log","launches","map","LAUNCH_QUERY","Carpentry","title","Helmet","charSet","name","content","style","maxWidth","marginBottom","OperationData","context","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","isNew","cleanup","verifyDocumentType","document","type","operation","QueryData","_super","onNewData","_this","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","networkStatus","ready","called","undefined","fetchData","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","Query","displayName","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","watchQuery","registerSSRObservable","newObservableQueryOptions","obsQuery","subscribe","next","previousResult","_error","resubscribeToQuery","lastError","getLastError","lastResult","getLastResult","resetLastResults","Object","assign","currentResult","partial","errors","graphQLErrors","resetQueryStoreErrors","unsubscribe","useBaseQuery","x","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","Promise","resolve","then","memoFn","ref","memo","value","queryResult","useQuery","MutationData","setResult","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","response","onMutationCompleted","onMutationError","Mutation","mostRecentMutationId","mutationContext","_c","mutateOptions","mutateVariables","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","SubscriptionData","initialize","getLoadingResult","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","subscriptionData","useSubscription","subscriptionDataRef","RenderPromises","queryPromises","Map","queryInfoTrie","observable","lookupQueryInfo","queryInstance","finish","seen","set","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","clear","all","varMap","get","has","variablesString","JSON","stringify","info"],"mappings":"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","file":"component---src-pages-carpentry-js-2b01b4f065ea3cb4ce65.js","sourcesContent":["require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React, { Component } from \"react\";\nimport \"../styles/text.css\"\n\nclass Subtitle extends Component {\n  render() {\n    return (\n      <div className=\"subtitleBox\" >\n        {this.props.subtitleText}\n      </div>\n    );\n  }\n}\n\nexport default Subtitle;","import React, { Component } from \"react\";\nimport Subtitle from './subtitle'\nimport \"../styles/text.css\"\n\n\nclass Title extends Component {\n  render() {\n    return (\n      <div className=\"titleBox\" >\n        <h1>{this.props.titleText}</h1>\n        <Subtitle subtitleText={this.props.subtitleText} />\n      </div>\n    );\n  }\n}\n\nexport default Title;","export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __rest } from 'tslib';\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nfunction Query(props) {\n  var children = props.children,\n      query = props.query,\n      options = __rest(props, [\"children\", \"query\"]);\n\n  var result = useQuery(query, options);\n  return children && result ? children(result) : null;\n}\n\n(function (Query) {\n  Query.propTypes = {\n    client: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    fetchPolicy: PropTypes.string,\n    notifyOnNetworkStatusChange: PropTypes.bool,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    pollInterval: PropTypes.number,\n    query: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    ssr: PropTypes.bool,\n    partialRefetch: PropTypes.bool,\n    returnPartialData: PropTypes.bool\n  };\n})(Query || (Query = {}));\n\nfunction Mutation(props) {\n  var _a = useMutation(props.mutation, props),\n      runMutation = _a[0],\n      result = _a[1];\n\n  return props.children ? props.children(runMutation, result) : null;\n}\n\n(function (Mutation) {\n  Mutation.propTypes = {\n    mutation: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    refetchQueries: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])), PropTypes.func]),\n    awaitRefetchQueries: PropTypes.bool,\n    update: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    fetchPolicy: PropTypes.string\n  };\n})(Mutation || (Mutation = {}));\n\nfunction Subscription(props) {\n  var result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\n(function (Subscription) {\n  Subscription.propTypes = {\n    subscription: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    children: PropTypes.func,\n    onSubscriptionData: PropTypes.func,\n    onSubscriptionComplete: PropTypes.func,\n    shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n  };\n})(Subscription || (Subscription = {}));\n\nexport { Mutation, Query, Subscription };","import React from 'react';\nimport classNames from 'classnames'\nimport '../styles/text.css'\nimport { Link } from \"gatsby\"\n\n\nexport default function LaunchItem({launch: { flight_number, mission_name, launch_date_local, \n    launch_success } }) {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Mission: <span className={classNames({\n                        'success': launch_success,\n                        'fail': !launch_success\n                    })}>{mission_name}</span></h4>\n                    <p>Date: {launch_date_local}</p>\n                </div>\n                <div className=\"col-md-3\">\n                    {/* <Link to={`/carpentry/launch/${flight_number}`} className=\"btn btn-secondary\">Details</Link> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import React, {Component, Fragment} from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './launchItem'\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n      launches {\n          flight_number\n          mission_name\n          launch_date_local\n          launch_success\n      }\n  }\n`;\n\nexport class Launches extends Component {\n    render() {\n        return (\n            <Fragment>\n                <h1 className=\"display-4 my-3\">Launches</h1>\n                <Query query={LAUNCHES_QUERY}>\n                    {\n                        ({ loading, error, data }) => {\n                            if(loading) return <h4>loading...</h4>\n                            if(error) console.log(error);\n\n                            return <Fragment>\n                                {\n                                    data.launches.map(launch => (\n                                        <LaunchItem key={launch.flight_number} launch={launch} />\n                                    ))\n                                }\n                            </Fragment>;\n                        }\n                    }\n                </Query>\n            </Fragment>\n        )\n    }\n}\n\nexport default Launches","import React, {Component, Fragment} from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport '../styles/text.css'\n// https://developer.aliyun.com/mirror/npm/package/classnames\nimport classNames from 'classnames'\nimport { Link } from \"gatsby\"\n\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery ( $flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local,\n            rocket { \n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\n\nexport class Launch extends Component {\n    render() {\n        let { flight_number } = this.props.match.params;\n        flight_number = parseInt(flight_number);\n        return (\n            <Fragment>\n                <Query query={LAUNCH_QUERY} variables={{flight_number}}>\n                    {\n                        ({ loading, error, data }) => {\n                            if(loading) return <h4>loading...</h4>\n                            if(error) console.log(error);\n\n                            const { mission_name, flight_number, launch_year, launch_success, \n                                rocket: {rocket_id, rocket_name, rocket_type}} = data.launch;\n                            return <Fragment>\n                                <h1>\n                                    Mission: {mission_name}\n                                </h1>\n                                <h4>Launch Details:</h4>\n                                <ul>\n                                    <li>Flight Number: {flight_number}</li>\n                                    <li>Launch Year: {launch_year}</li>\n                                    <li>Launch Success: <span className={classNames({\n                                        'success': launch_success,\n                                        'fail': !launch_success\n                                    })}>{launch_success ? 'yes' : 'no'}</span> </li>\n                                </ul>\n\n                                <h4>Rocket Details:</h4>\n                                <ul>\n                                    <li>Rocket ID: {rocket_id}</li>\n                                    <li>Rocket Name: {rocket_name}</li>\n                                    <li>Rocket Type: {rocket_type} </li>\n                                </ul>\n                                <Link to={`/carpentry`} ><h4>Back</h4></Link>\n                            </Fragment>;\n                        }\n                    }\n                </Query>\n            </Fragment>\n        )\n    }\n}\n\nexport default Launch","import React, {Fragment} from \"react\"\nimport { Helmet } from 'react-helmet'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n// import Image from \"../components/image\"\nimport Title from \"../components/title\"\nimport Launches from \"../components/launches\"\nimport Launch from \"../components/launch\"\n// import {BrowserRouter as Router, Route} from 'react-router-dom'\n\n\nconst Carpentry = ( ) => {  \n  return (\n    // <Router>\n    <Layout>\n      <SEO title=\"Sean Higgins - Carpentry\" />\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"title\" content=\"Sean Higgins - Carpentry\" />\n          <meta name=\"description\" content=\"Sean Higgins, Software Engineer\" />\n      </Helmet>\n      <Title titleText=\"Woodworking Projects\" subtitleText=\"A piece of furniture each year of university\"/>\n\n\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        {/* <Image /> */}\n        <Launches/>\n        \n        {/* <Route exact path=\"/carpentry/launch/:flight_number\" component={Launch}/> */}\n      </div>\n    </Layout> \n    // </Router>\n  );\n};\n\nexport default Carpentry\n","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.bind\";\nimport { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n    if (storePrevious === void 0) {\n      storePrevious = false;\n    }\n\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        onNewData = _a.onNewData;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.currentObservable = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.cleanup();\n\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.onNewData();\n    };\n\n    _this.getExecuteResult = function () {\n      var result = _this.getQueryResult();\n\n      _this.startQuerySubscription();\n\n      return result;\n    };\n\n    _this.obsRefetch = function (variables) {\n      return _this.currentObservable.query.refetch(variables);\n    };\n\n    _this.obsFetchMore = function (fetchMoreOptions) {\n      return _this.currentObservable.query.fetchMore(fetchMoreOptions);\n    };\n\n    _this.obsUpdateQuery = function (mapFn) {\n      return _this.currentObservable.query.updateQuery(mapFn);\n    };\n\n    _this.obsStartPolling = function (pollInterval) {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.startPolling(pollInterval);\n    };\n\n    _this.obsStopPolling = function () {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.stopPolling();\n    };\n\n    _this.obsSubscribeToMore = function (options) {\n      return _this.currentObservable.query.subscribeToMore(options);\n    };\n\n    _this.onNewData = onNewData;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    var options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    var obs = this.currentObservable.query;\n    var currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    if (this.lazyOptions) {\n      options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n      options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n    }\n\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  };\n\n  QueryData.prototype.ssrInitiated = function () {\n    return this.context && this.context.renderPromises;\n  };\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var ssrDisabled = this.getOptions().ssr === false;\n    var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    var ssrLoading = __assign({\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client\n    }, this.observableQueryFields());\n\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previousData.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    var result;\n\n    if (this.ssrInitiated()) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    var options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    var displayName = options.displayName || 'Query';\n\n    if (this.ssrInitiated() && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return __assign(__assign({}, options), {\n      displayName: displayName,\n      context: options.context,\n      metadata: {\n        reactComponent: {\n          displayName: displayName\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    var _a, _b;\n\n    if (this.ssrInitiated()) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable.query) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), {\n        children: null\n      });\n      this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n\n      if (this.ssrInitiated()) {\n        (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n      }\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.query.setOptions(newObservableQueryOptions)[\"catch\"](function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function () {\n    var _this = this;\n\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n    var obsQuery = this.currentObservable.query;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading === loading && previousResult.networkStatus === networkStatus && equal(previousResult.data, data)) {\n          return;\n        }\n\n        _this.onNewData();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading || !equal(_error, _this.previousData.error)) {\n          _this.previousData.error = _error;\n\n          _this.onNewData();\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var lastError = this.currentObservable.query.getLastError();\n    var lastResult = this.currentObservable.query.getLastResult();\n    this.currentObservable.query.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query, {\n      lastError: lastError,\n      lastResult: lastResult\n    });\n  };\n\n  QueryData.prototype.getQueryResult = function () {\n    var result = this.observableQueryFields();\n    var options = this.getOptions();\n\n    if (options.skip) {\n      result = __assign(__assign({}, result), {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      });\n    } else {\n      var currentResult = this.currentObservable.query.getCurrentResult();\n      var loading = currentResult.loading,\n          partial = currentResult.partial,\n          networkStatus = currentResult.networkStatus,\n          errors = currentResult.errors;\n      var error = currentResult.error,\n          data = currentResult.data;\n\n      if (errors && errors.length > 0) {\n        error = new ApolloError({\n          graphQLErrors: errors\n        });\n      }\n\n      result = __assign(__assign({}, result), {\n        loading: loading,\n        networkStatus: networkStatus,\n        error: error,\n        called: true\n      });\n\n      if (loading) {\n        var previousData = this.previousData.result && this.previousData.result.data;\n        result.data = previousData && data ? __assign(__assign({}, previousData), data) : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query.getLastResult() || {}).data\n        });\n      } else {\n        var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n        var partialRefetch = options.partialRefetch;\n\n        if (partialRefetch && !data && partial && fetchPolicy !== 'cache-only') {\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading = this.previousData.result && this.previousData.result.loading || false;\n    this.previousData.result = result;\n    this.currentObservable.query && this.currentObservable.query.resetQueryStoreErrors();\n    return result;\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    var obsQuery = this.currentObservable.query;\n    if (!obsQuery || !this.previousData.result) return;\n    var _a = this.previousData.result,\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  QueryData.prototype.observableQueryFields = function () {\n    var observable = this.currentObservable.query;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    };\n  };\n\n  return QueryData;\n}(OperationData);\n\nfunction useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n  var queryData = queryDataRef.current || new QueryData({\n    options: updatedOptions,\n    context: context,\n    onNewData: function onNewData() {\n      if (!queryData.ssrInitiated()) {\n        Promise.resolve().then(forceUpdate);\n      } else {\n        forceUpdate();\n      }\n    }\n  });\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  if (queryData.ssrInitiated() && !queryDataRef.current) {\n    queryDataRef.current = queryData;\n  }\n\n  var memo = {\n    options: __assign(__assign({}, updatedOptions), {\n      onError: undefined,\n      onCompleted: undefined\n    }),\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  var queryResult = lazy ? result[1] : result;\n  useEffect(function () {\n    if (!queryDataRef.current) {\n      queryDataRef.current = queryData;\n    }\n\n    return function () {\n      return queryData.cleanup();\n    };\n  }, []);\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, [queryResult.loading, queryResult.networkStatus, queryResult.error, queryResult.data]);\n  return result;\n}\n\nfunction useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      })[\"catch\"](function (error) {\n        _this.onMutationError(error, mutationId);\n\n        if (!_this.getOptions().onError) throw error;\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    var _a = this.getOptions(),\n        mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        update = _a.update,\n        _b = _a.context,\n        mutationContext = _b === void 0 ? {} : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        fetchPolicy = _a.fetchPolicy;\n\n    var mutateOptions = __assign({}, mutationFunctionOptions);\n\n    var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n    delete mutateOptions.variables;\n    return this.refreshClient().client.mutate(__assign({\n      mutation: mutation,\n      optimisticResponse: optimisticResponse,\n      refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries: awaitRefetchQueries,\n      update: update,\n      context: mutationContext,\n      fetchPolicy: fetchPolicy,\n      variables: mutateVariables\n    }, mutateOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables) || this.previousOptions.skip !== this.getOptions().skip)) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign(__assign({}, currentResult), {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _a = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nfunction makeDefaultQueryInfo() {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nvar RenderPromises = function () {\n  function RenderPromises() {\n    this.queryPromises = new Map();\n    this.queryInfoTrie = new Map();\n  }\n\n  RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n    this.lookupQueryInfo(props).observable = observable;\n  };\n\n  RenderPromises.prototype.getSSRObservable = function (props) {\n    return this.lookupQueryInfo(props).observable;\n  };\n\n  RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n    var info = this.lookupQueryInfo(queryInstance.getOptions());\n\n    if (!info.seen) {\n      this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n        resolve(queryInstance.fetchData());\n      }));\n      return null;\n    }\n\n    return finish();\n  };\n\n  RenderPromises.prototype.hasPromises = function () {\n    return this.queryPromises.size > 0;\n  };\n\n  RenderPromises.prototype.consumeAndAwaitPromises = function () {\n    var _this = this;\n\n    var promises = [];\n    this.queryPromises.forEach(function (promise, queryInstance) {\n      _this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  };\n\n  RenderPromises.prototype.lookupQueryInfo = function (props) {\n    var queryInfoTrie = this.queryInfoTrie;\n    var query = props.query,\n        variables = props.variables;\n    var varMap = queryInfoTrie.get(query) || new Map();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    var variablesString = JSON.stringify(variables);\n    var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  };\n\n  return RenderPromises;\n}();\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };"],"sourceRoot":""}