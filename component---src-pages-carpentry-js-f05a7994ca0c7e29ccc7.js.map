{"version":3,"sources":["webpack:///./src/components/coffeeImages.js","webpack:///./src/components/deskImages.js","webpack:///./src/components/sidetableImages.js","webpack:///./src/components/shoerackImages.js","webpack:///./src/pages/carpentry.js"],"names":["CoffeeImages","data","fluid","image1","childImageSharp","alt","image2","image3","image4","image5","image6","image7","image8","image9","image10","DeskImages","SideImages","ShoeImages","Carpentry","title","Helmet","charSet","name","content","titleText","subtitleText","style","maxWidth","marginBottom"],"mappings":"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","file":"component---src-pages-carpentry-js-f05a7994ca0c7e29ccc7.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nexport default function CoffeeImages() {\n    const data = useStaticQuery(graphql`\n        query {\n            image1: file(relativePath: { eq: \"coffee1.jpg\" }) {\n                ...baseImage\n            }\n            image2: file(relativePath: { eq: \"coffee2.jpg\" }) {\n                ...baseImage\n            }\n            image3: file(relativePath: { eq: \"coffee3.jpg\" }) {\n                ...baseImage\n            }\n            image4: file(relativePath: { eq: \"coffee4.jpg\" }) {\n                ...baseImage\n            }\n            image5: file(relativePath: { eq: \"coffee5.jpg\" }) {\n                ...baseImage\n            }\n            image6: file(relativePath: { eq: \"coffee6.jpg\" }) {\n                ...baseImage\n            }\n            image7: file(relativePath: { eq: \"coffee7.jpg\" }) {\n                ...baseImage\n            }\n            image8: file(relativePath: { eq: \"coffee8.jpg\" }) {\n                ...baseImage\n            }\n            image9: file(relativePath: { eq: \"coffee9.jpg\" }) {\n                ...baseImage\n            }\n            image10: file(relativePath: { eq: \"coffee10.jpg\" }) {\n                ...baseImage\n            }\n        }\n    `)\n    return (\n      <div>\n        <Img fluid={data.image1.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image2.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image3.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image4.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image5.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image6.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image7.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image8.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image9.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image10.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n      </div>\n    )\n  }\n  \nexport const baseImage = graphql`\n  fragment baseImage on File {\n    childImageSharp {\n      fluid(maxWidth: 300) {\n        ...GatsbyImageSharpFluid_tracedSVG\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nexport default function DeskImages() {\n    const data = useStaticQuery(graphql`\n        query {\n            image1: file(relativePath: { eq: \"desk1.jpg\" }) {\n                ...baseImage\n            }\n            image2: file(relativePath: { eq: \"desk2.jpg\" }) {\n                ...baseImage\n            }\n            image3: file(relativePath: { eq: \"desk3.jpg\" }) {\n                ...baseImage\n            }\n            image4: file(relativePath: { eq: \"desk4.jpg\" }) {\n                ...baseImage\n            }\n        }\n    `)\n    return (\n      <div>\n        <Img fluid={data.image1.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image2.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image3.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image4.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n      </div>\n    )\n  }\n  \nexport const baseImage = graphql`\n  fragment baseImage on File {\n    childImageSharp {\n      fluid(maxWidth: 300) {\n        ...GatsbyImageSharpFluid_tracedSVG\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nexport default function SideImages() {\n    const data = useStaticQuery(graphql`\n        query {\n            image1: file(relativePath: { eq: \"side1.jpg\" }) {\n                ...baseImage\n            }\n            image2: file(relativePath: { eq: \"side2.jpg\" }) {\n                ...baseImage\n            }\n            image3: file(relativePath: { eq: \"side3.jpg\" }) {\n                ...baseImage\n            }\n            image4: file(relativePath: { eq: \"side4.jpg\" }) {\n                ...baseImage\n            }\n            image5: file(relativePath: { eq: \"side5.jpg\" }) {\n                ...baseImage\n            }\n            image6: file(relativePath: { eq: \"side6.jpg\" }) {\n                ...baseImage\n            }\n            image7: file(relativePath: { eq: \"side7.jpg\" }) {\n                ...baseImage\n            }\n            image8: file(relativePath: { eq: \"side8.jpg\" }) {\n                ...baseImage\n            }\n            image9: file(relativePath: { eq: \"side9.jpg\" }) {\n                ...baseImage\n            }\n            image10: file(relativePath: { eq: \"side10.jpg\" }) {\n                ...baseImage\n            }\n        }\n    `)\n    return (\n      <div>\n        <Img fluid={data.image1.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image2.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image3.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image4.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image5.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image6.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image7.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image8.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image9.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image10.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n      </div>\n    )\n  }\n  \nexport const baseImage = graphql`\n  fragment baseImage on File {\n    childImageSharp {\n      fluid(maxWidth: 300) {\n        ...GatsbyImageSharpFluid_tracedSVG\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nexport default function ShoeImages() {\n    const data = useStaticQuery(graphql`\n        query {\n            image1: file(relativePath: { eq: \"shoe1.jpg\" }) {\n                ...baseImage\n            }\n            image2: file(relativePath: { eq: \"shoe2.jpg\" }) {\n                ...baseImage\n            }\n            image3: file(relativePath: { eq: \"shoe3.jpg\" }) {\n                ...baseImage\n            }\n            image4: file(relativePath: { eq: \"shoe4.jpg\" }) {\n                ...baseImage\n            }\n            image5: file(relativePath: { eq: \"shoe5.jpg\" }) {\n                ...baseImage\n            }\n            image6: file(relativePath: { eq: \"shoe6.jpg\" }) {\n                ...baseImage\n            }\n        }\n    `)\n    return (\n      <div>\n        <Img fluid={data.image1.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image2.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image3.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image4.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image5.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n        <Img fluid={data.image6.childImageSharp.fluid} alt=\"Sean Higgins\"/>\n      </div>\n    )\n  }\n  \nexport const baseImage = graphql`\n  fragment baseImage on File {\n    childImageSharp {\n      fluid(maxWidth: 300) {\n        ...GatsbyImageSharpFluid_tracedSVG\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Helmet } from 'react-helmet'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport CoffeeImages from \"../components/coffeeImages\"\nimport DeskImages from \"../components/deskImages\"\nimport SideImages from \"../components/sidetableImages\"\nimport ShoeImages from \"../components/shoerackImages\"\nimport Title from \"../components/title\"\n\n\nconst Carpentry = ( ) => {  \n  return (\n    <Layout>\n      <SEO title=\"Sean Higgins - Carpentry\" />\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"title\" content=\"Sean Higgins - Carpentry\" />\n          <meta name=\"description\" content=\"Sean Higgins, Software Engineer\" />\n      </Helmet>\n      <Title titleText=\"Woodworking Projects\" subtitleText=\"A piece of furniture each year of university\"/>\n\n\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <CoffeeImages />\n      </div>\n\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <DeskImages />\n      </div>\n\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <SideImages />\n      </div>\n\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <ShoeImages />\n      </div>\n    </Layout> \n  );\n};\n\nexport default Carpentry\n"],"sourceRoot":""}